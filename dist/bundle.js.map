{"version":3,"file":"bundle.js","sources":["../src/main.ts"],"sourcesContent":["import  moment from 'moment';\r\n\r\n\r\n    interface Comic {\r\n    safe_title: string;\r\n    img: string;\r\n    year: number;\r\n    month: number;\r\n    day: number;\r\n    alt: string;\r\n    releaseDate: string;\r\n  }\r\n  \r\n  interface ApiResponse {\r\n    id: number;\r\n  }\r\n  \r\n  const button = document.querySelector(\".get-comic-btn\");\r\n  if (button) {\r\n    button.addEventListener('click', async function() {\r\n      const email: string = 'v.patrina@innopolis.university';\r\n      const urlParams: URLSearchParams = new URLSearchParams({ email });\r\n      const url: string = `https://fwd.innopolis.app/api/hw2?email=${email}`;\r\n      try {\r\n        const response = await fetch(url);\r\n        const data: ApiResponse = await response.json();\r\n        const id = data;\r\n        const comicUrl = `https://fwd.innopolis.university/api/comic?id=${id}`;\r\n        const comicResponse = await fetch(comicUrl);\r\n        const comic: Comic = await comicResponse.json();\r\n        const title = comic.safe_title;\r\n        const imageUrl = comic.img;\r\n        const date = new Date(comic.year, comic.month - 1, comic.day);\r\n        const altText = comic.alt;\r\n        const image = document.createElement('img');\r\n        image.src = imageUrl;\r\n        image.alt = altText;\r\n        const heading = document.createElement('h2');\r\n        heading.textContent = title;\r\n        const dateElement = document.createElement('p');\r\n\r\n        const releaseDate = date;\r\n        const difference = moment(releaseDate).fromNow();\r\n        console.log(`Comics released ${difference}`);\r\n\r\n        dateElement.textContent = date.toLocaleDateString();\r\n        const resultContainer = document.getElementById('result-container');\r\n        if (resultContainer) {\r\n          resultContainer.innerHTML = '';\r\n          resultContainer.appendChild(image);\r\n          resultContainer.appendChild(heading);\r\n          resultContainer.appendChild(dateElement);\r\n          \r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }\r\n    });\r\n  } else {\r\n    console.error('Button not found!');\r\n  }\r\n\r\n\r\n\r\n"],"names":["button","document","querySelector","addEventListener","email","URLSearchParams","url","response","fetch","data","json","comicUrl","comicResponse","comic","title","safe_title","imageUrl","img","date","Date","year","month","day","altText","alt","image","createElement","src","heading","textContent","dateElement","releaseDate","difference","moment","fromNow","console","log","toLocaleDateString","resultContainer","getElementById","innerHTML","appendChild","error"],"mappings":"scAiBE,MAAMA,EAASC,SAASC,cAAc,kBAClCF,EACFA,EAAOG,iBAAiB,SAAS,oDAC/B,MAAMC,EAAgB,iCACa,IAAIC,gBAAgB,CAAED,UACzD,MAAME,EAAc,2CAA2CF,IAC/D,IACE,MAAMG,QAAiBC,MAAMF,GACvBG,QAA0BF,EAASG,OAEnCC,EAAW,iDADNF,IAELG,QAAsBJ,MAAMG,GAC5BE,QAAqBD,EAAcF,OACnCI,EAAQD,EAAME,WACdC,EAAWH,EAAMI,IACjBC,EAAO,IAAIC,KAAKN,EAAMO,KAAMP,EAAMQ,MAAQ,EAAGR,EAAMS,KACnDC,EAAUV,EAAMW,IAChBC,EAAQxB,SAASyB,cAAc,OACrCD,EAAME,IAAMX,EACZS,EAAMD,IAAMD,EACZ,MAAMK,EAAU3B,SAASyB,cAAc,MACvCE,EAAQC,YAAcf,EACtB,MAAMgB,EAAc7B,SAASyB,cAAc,KAErCK,EAAcb,EACdc,EAAaC,EAAM,QAACF,GAAaG,UACvCC,QAAQC,IAAI,mBAAmBJ,KAE/BF,EAAYD,YAAcX,EAAKmB,qBAC/B,MAAMC,EAAkBrC,SAASsC,eAAe,oBAC5CD,IACFA,EAAgBE,UAAY,GAC5BF,EAAgBG,YAAYhB,GAC5Ba,EAAgBG,YAAYb,GAC5BU,EAAgBG,YAAYX,GAG/B,CAAC,MAAOY,GACPP,QAAQO,MAAM,SAAUA,EACzB,IACF,IAEDP,QAAQO,MAAM"}